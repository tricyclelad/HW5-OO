As soon as I had finished this assignment, I knew that I would want to return to it to make some improvements. The first thing that had come to my mind was using a factory with the strategy pattern. I had seen in class how well those two patterns work together, so I wanted to try my hand at implementing it into my solution. The change was quite simple, and now there is a message factory class which creates the appropriate messageProcessor given a string. This really cleaned up the code in raceManager and isolates the process of creating and sending messages. 
	I also never had much of a chance to use the singleton pattern in the assignments. I really like the singleton pattern because I think it is a very clever and simple solution. I saw an opportunity to change the communicator to a singleton since in this application, we could run into many problems if there is more than one communicator. So, I made a few changes to the communicator class so it would use the singleton pattern. Overall, I really enjoyed reworking this assignment. I saw many opportunities to improve the overall code, and create better unit tests. It was good to go back to an old assignment and apply what I had learned later in the semester.